version: "3.9"
services:
  backend:
    build: ./
    container_name: diploma_backend
    image: "${APP_NAME}:latest"
    env_file: "./.env"
    restart: "unless-stopped"
    volumes:
      - "~/${DOCKER_SHARED_VOLUME_PATH}/${APP_NAME}/backend:/usr/app/data"
    ports:
      - "8000:8000"
    networks:
      - backend
    depends_on:
      - mongo
      - queue
    expose:
      - 8000
    entrypoint: uvicorn main:application --host 0.0.0.0
  mongo:
    image: mongo:6.0.6
    container_name: mongo
    restart: "unless-stopped"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    ports:
      - "27017:27017"
    volumes:
      - "~/${DOCKER_SHARED_VOLUME_PATH}/${APP_NAME}/mongo:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - backend
  queue:
    container_name: queue
    ports:
      - "5672:5672"
      - "15672:15672"
    image: rabbitmq:3.12.4-management
    restart: "unless-stopped"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - backend
#  backround_beat:
#    build: ./
#    container_name: background_beat
#    image: "${APP_NAME}:latest"
#    env_file: "./.env"
#    restart: "unless-stopped"
#    depends_on:
#      - queue
#    volumes:
#      - "~/${DOCKER_SHARED_VOLUME_PATH}/${APP_NAME}/beat:/usr/app/data"
#    networks:
#      - backend
#    entrypoint: celery -A background_app beat --loglevel=info
#  backround_worker:
#    build: ./
#    container_name: background_worker
#    image: "${APP_NAME}:latest"
#    env_file: "./.env"
#    restart: "unless-stopped"
#    depends_on:
#      - queue
#    volumes:
#      - "~/${DOCKER_SHARED_VOLUME_PATH}/${APP_NAME}/worker:/usr/app/data"
#    networks:
#      - backend
#    entrypoint: celery -A background_app worker --loglevel=info

  redis:
    image: redis:7.2.1-bookworm
    container_name: redis
    restart: "unless-stopped"
    environment:
      REDIS_PASSWORD: ${CACHE_REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - "~/${DOCKER_SHARED_VOLUME_PATH}/${APP_NAME}/redis:/data/redis"
    command:
      - "--requirepass ${CACHE_REDIS_PASSWORD}"
    networks:
      - backend
networks:
  backend:
    name: backend
